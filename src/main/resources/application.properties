spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/valtracker
spring.datasource.username=nickchoi
spring.datasource.password=choi
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# JPA stands for Java Persistence API (Application Programming Interface).
# It is a Java specification that gives some functionality and standard to ORM tools. 
# It is used to examine, control, and persist data between Java objects and relational databases. 
# It is observed as a standard technique for Object Relational Mapping. 

# It is considered as a link between an object-oriented model and a relational database system.
# As it is a specification of Java, JPA does not conduct any functioning by itself. 
# Therefore, it needs implementation. Hence, for data persistence ORM tools like Hibernate implements JPA specifications.
# For data persistence, the javax.persistence package contains the JPA classes and interfaces.

# Let us do discuss some key features of JPA which are as follows:

# JPA is only a specification, it is not an implementation.
# It is a set of rules and guidelines to set interfaces for implementing object-relational mapping, .
# It needs a few classes and interfaces.
# It supports simple, cleaner, and assimilated object-relational mapping.
# It supports polymorphism and inheritance.
# Dynamic and named queries can be included in JPA.

# Now we need to incorporate a framework to be discussed. 
# Yes, you guessed it right, hibernate. 
# It is a java framework, open-source, lightweight, and ORM (Object Relational Mapping) tool 
# for the java language which simplifies the buildout of Java application to interact with the database.
# It is used to save the Java objects in the relational database system.

